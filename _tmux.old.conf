set -g default-terminal "screen-256color"
set -g base-index 1
setw -g pane-base-index 1

unbind C-b
set -g prefix C-a
bind-key C-a send-prefix
set -sg escape-time 0

# 从tmux v1.6版起，支持设置第二个指令前缀
# set-option -g prefix2 `

set -g history-limit 50000

set -g set-titles on
set -g set-titles-string "#I:#W"

set -g remain-on-exit off
setw -g automatic-rename off
setw -g allow-rename off
setw -g aggressive-resize on

bind r source-file ~/.tmux.conf

# new window and retain cwd
bind c new-window -c "#{pane_current_path}"

# Prompt to rename window right after it's created
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

# switch windows alt+number
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

unbind '"'
bind - splitw -v -c '#{pane_current_path}' # 垂直方向新增面板
unbind %
bind / splitw -h -c '#{pane_current_path}' # 水平方向新增面板

bind Space display-panes -d 2000
bind -n ^x display-panes -d 0

#set -g mouse on
# Drag to re-order windows
#bind-key -n MouseDrag1Status swap-window -t=

# 绑定hjkl键为面板切换的上下左右键
bind -n M-k select-pane -U # 绑定k为↑
bind -n M-j select-pane -D # 绑定j为↓
bind -n M-h select-pane -L # 绑定h为←
bind -n M-l select-pane -R # 绑定l为→
bind -r k select-pane -U # 绑定k为↑
bind -r j select-pane -D # 绑定j为↓
bind -r h select-pane -L # 绑定h为←
bind -r l select-pane -R # 绑定l为→

bind -r e lastp # 选择最后一个面板
bind -r ^e last # 选择最后一个窗口

bind -r ^u swapp -U
bind -r ^d swapp -D

# 绑定Ctrl+hjkl键为面板上下左右调整边缘的快捷指令
bind -r K resizep -U 10
bind -r J resizep -D 10
bind -r H resizep -L 10
bind -r L resizep -R 10

#join-pane -s window01 # 合并名称为window01的窗口的默认（第一个）面板到当前窗口中
#join-pane -s window01.1 # .1显式指定了第一个面板，.2就是第二个面板(我本地将面板编号起始值设置为1，默认是0)

bind m command-prompt "splitw -h 'exec man %%'"   # 绑定m键为在新的panel打开man
# 绑定P键为开启日志功能，如下，面板的输出日志将存储到桌面
bind P pipe-pane -o "cat >>~/Desktop/#W.log" \; display "Toggled logging to ~/Desktop/#W.log"

set -g status on

set -g status-interval 1
set -g status-justify left

wg_date="%y-%m-%d[%w]%H:%M:%S"
set -g status-style "bg=#333333, fg=white"
set -g status-left "#[bg=#FF661D] ❐ #S "
set -g status-right "$wg_date"
set -g status-left-length 300
set -g status-right-length 500

wg_path="#{=|-24|…;s|$HOME|~|:pane_current_path}"
set -wg window-status-format " #[fg=white,bold]#I:#[fg=green]#W#[fg=blue]($wg_path)#[fg=white] "
set -wg window-status-current-format " #[fg=white,bold]#I:#[fg=cyan]#W#[fg=blue]($wg_path)#[fg=white] "

set -wg window-status-separator ""
set -wg window-status-current-style "bg=black"
set -wg window-status-last-style "fg=yellow"

setw -g monitor-activity on # 非当前窗口有内容更新时在状态栏通知
set -g message-style "bg=#202529, fg=#91A8BA"


setw -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi r send-keys -X rectangle-toggle

# ==============================================
# ===   Nesting local and remote sessions     ===
# ==============================================

color_dark="colour232"
color_status_text="colour245"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour255"

# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' \
    'set -g status-right ""'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root M-]  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off M-] \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S
